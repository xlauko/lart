include( CTest )

add_executable( larttests )

target_sources( larttests
    PRIVATE
    src/main.cpp
    src/annotations.cpp
)

target_link_libraries( larttests PRIVATE lart_static )
target_link_libraries( larttests PRIVATE lart_project_options lart_project_warnings )

enable_sanitizers( larttests )

target_include_directories( larttests
    PRIVATE $<BUILD_INTERFACE:${PROJECT_SOURCE_DIR}/include>
            $<BUILD_INTERFACE:${CMAKE_CURRENT_LIST_DIR}/include>
)

target_compile_options(
    larttests
    PRIVATE $<$<CXX_COMPILER_ID:MSVC>:/std:c++20>
            $<$<CXX_COMPILER_ID:MSVC>:/W4>
            $<$<CXX_COMPILER_ID:MSVC>:/WX>
            $<$<OR:$<CXX_COMPILER_ID:GNU>,$<CXX_COMPILER_ID:Clang>>:-Wall>
            $<$<OR:$<CXX_COMPILER_ID:GNU>,$<CXX_COMPILER_ID:Clang>>:-Werror>
            $<$<OR:$<CXX_COMPILER_ID:GNU>,$<CXX_COMPILER_ID:Clang>>:-pedantic>
)

# add `-DCATCH_CONFIG_RUNTIME_STATIC_REQUIRE to switch to runtime only checks
# target_compile_definitions(SI_detail_tests PRIVATE
# CATCH_CONFIG_RUNTIME_STATIC_REQUIRE)


set( LART_TEST_SHLIBEXT "${CMAKE_SHARED_LIBRARY_SUFFIX}" )

set( LART_TEST_SITE_CFG_INPUT "${CMAKE_CURRENT_SOURCE_DIR}/lit.site.cfg.py.in" )
set( LART_TEST_CFG_INPUT "${CMAKE_CURRENT_SOURCE_DIR}/lit.cfg.py.in" )
set( LART_TEST_SRC_DIR "${CMAKE_CURRENT_SOURCE_DIR}" )

set( LIT_SITE_CFG_IN_HEADER
    "## Autogenerated from ${LART_TEST_SITE_CFG_INPUT}\n## Do not edit!" )

configure_file( "${LART_TEST_SITE_CFG_INPUT}"
  "${CMAKE_CURRENT_BINARY_DIR}/lit.site.cfg.py" @ONLY
)

add_test( NAME lart COMMAND larttests )

add_test( NAME lit COMMAND lit -v "${CMAKE_CURRENT_BINARY_DIR}")
